QUICK INSTALL
=============

parted --script /dev/sda mklabel gpt mkpart primary linux-swap 0% 2048MiB mkpart primary ext4 2048MiB 100%
mkswap /dev/sda1
swapon /dev/sda1
mkfs.ext4 /dev/sda2

mount /dev/sda2 /mnt
pacstrap /mnt base

genfstab -U /mnt >> /mnt/etc/fstab

arch-chroot /mnt
pacman -S gptfdisk syslinux # installation of syslinux will create /boot/syslinux/syslinux.cfg file
nano /boot/syslinux/syslinux.cfg # change /dev/sda3 to /dev/sda2
syslinux-install_update -i -a -m
exit # exit arch-chroot
reboot # Rebooting this way is ESSENTIAL, or else if you hard reset here, you will find the reboot works but a reboot again causes INT18: Boot failure

#############
# PARTITION #
#############

# Create separate small partition for /boot
# to avoid bios limitation, which gives following
# grub error on boot:

error: attempt to read or write outside of disk 'hd0'

# http://forums.opensuse.org/english/get-technical-help-here/pre-release-beta/476780-boot-failure-mkinitrd-does-not-understand-dev-sdx-has-become-dev-sde-2.html



# Partition with fdisk
# Create 100M for /boot in partition 1
# Create large space for / in partition 2
# Create the remaining space for swap
fdisk /dev/sdx

# make partition 1 of sdx bootable
sfdisk -A1 /dev/sdx # 

# Format /boot
mkfs.ext2 /dev/sdx1

# Format / 
mkfs.ext4 /dev/sdx2

# SHRINK FS
# to 10G as example 
resize2fs /dev/sdx2 10G

# SHRINK PARTITION
# delete parition and re-add partition 
# which is 10G or more,
# more is safest, so lets resize to 12G
fdisk

# Run resizefs again but without size argument
# to make sure the FS takes up the whole 12G
resize2fs /dev/sdx2

#######################
# INSTALL BASE SYSTEM #
#######################

# Scripts will contain pacstracp, arch-chroot , genfstab, etc.
# requires make and m4 at least
git clone https://github.com/falconindy/arch-install-scripts.git
cd arch-install-scripts
make
make install

mkdir /mnt/boot
mount /dev/sdx2 /mnt
mount /dev/sdx1 /mnt/boot
pacstrap /mnt base base-devel

# Check if mkinitcpio initializes on pacstrap completion.
# f it does, try to skip the mkinitcpio step below
# and see if it works

#########
# FSTAB #
#########

# -p = do not print pseudofs mounts

genfstab -p /mnt >> /mnt/etc/fstab

# You can edit /etc/fstab manually
# You can use disk UUID and can be
# determined with:

sudo blkid


# Run command outside of chroot
arch-chroot /mnt pacman -S grub

# ENTER CHROOT...
arch-chroot /mnt

################
# SETUP PACMAN #
################

# vim /etc/pacman.conf
SigLevel = Optional TrustAll

# Uncomment mirrors in /etc/pacman.d/mirrolist

# You may still need to run
pacman-key --init
# Even though it will fail
# or else pacman will still compalin about
# unkown keys when install packages

# If packages still gives 'signature from ___ is invalid' errors, 
# delete those packages:
rm /var/cache/pacman/pkg/___tar.xz

# Not sure what syslinux is for, didn't need it

# Wifi
pacman -S dialog wpa_supplicant

# maybe you don't need to run below 
# mkinitcpio -p linux

# Boot flag
sfdisk -A1 /dev/sdx # make partition 1 of sdx bootable if not done during partition already

# GRUB
# Apparently you need to 'modprobe dm-mod' first but you can't do it within chroot.
# Not sure if you need it
# Maybe remove /boot/grub first
pacman -S grub

grub-install --target=i386-pc --recheck --debug /dev/sdx
OR try just:
grub-install --recheck /dev/sdx

grub-mkconfig -o /boot/grub/grub.cfg

#############################
# ARCHLINUX IS NOW BOOTABLE #
#############################

# Add sudo user
pacman -S sudo
usermod -m robin
passwd robin
groupadd admin
usermod -a -G admin robin

# edit /etc/sudoers
%admin ALL=(ALL) ALL

####################
# LOCALE           #
# so unicode shows #
####################

sed -i 's/^#en_AU/en_AU/g' /etc/locale.gen
echo "LANG=en_AU.UTF-8" > /etc/locale.conf
locale-gen

##############
# NETWORKING #
##############

# You might want to disable IPV6 for troubleshooting purposes, see ipv5 in folder of this file

dhcpcd eth0

OR

systemctl start dhcpcd@eth0

# start dhcpcd on boot
systemctl enable dhcpcd@eth0
