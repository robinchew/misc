#AFTER 1st INSTALL
       # su - _postgresql
       $ mkdir /var/postgresql/data
       $ initdb -D /var/postgresql/data -U postgres -A md5 -W

#STAT DAEMON
su -l _postgresql -c "nohup /usr/local/bin/pg_ctl start -D /var/postgresql/data -l /var/postgresql/logfile -o '-D /var/postgresql/data' >/dev/null"

#ADD USER
sudo -u postgres createuser -D -A -P myuser
in psql: alter user robin with password 
sudo -u postgres createdb -O myuser mydb

-D, --no-createdb
The new user is not allowed to create databases. 

-A, --no-adduser
The new user is not allowed to create other users (i.e., the new user is a regular user not a superuser). 

-P, --pwprompt

#GROUPS
CREATE GROUP name;

ALTER GROUP name ADD USER uname1, ... ;
ALTER GROUP name DROP USER uname1, ... ;

DROP GROUP name;
SELECT groname FROM pg_group;

The psql program's \dg meta-command is also useful for listing the existing groups.

#ALTER
ALTER DATABASE name OWNER TO new_owner
ALTER TABLE name OWNER TO new_owner
ALTER GROUP name OWNER TO new_owner
                RENAME TO
ALTER TABLE distributors ADD CONSTRAINT distfk FOREIGN KEY (address) REFERENCES addresses(address) MATCH 

#CHANGE USER
\c


#SEQUENCE/SERIAL AUTO-INCREMENT ID
CREATE SEQUENCE car_id_seq
ALTER TABLE car ALTER COLUMN id SET DEFAULT nextval('car_id_seq');
SELECT setval('car_id_seq', 72); 


#GROUPS
17.3. Groups

As in Unix, groups are a way of logically grouping users to ease management of privileges: privileges can be granted to, or revoked from, a group as a whole. To create a group, use the CREATE GROUP SQL command:
CREATE GROUP name;

To add users to or remove users from an existing group, use ALTER GROUP:
ALTER GROUP name ADD USER uname1, ... ;
ALTER GROUP name DROP USER uname1, ... ;

To destroy a group, use DROP GROUP:
DROP GROUP name;

This only drops the group, not its member users. 

To determine the set of existing groups, examine the pg_group system catalog, for example
SELECT groname FROM pg_group;

The psql program's \dg meta-command is also useful for listing the existing groups.

#CHANGE USER
\c

#GRANT/REVOKE
grant select on car to viewer;
grant select on bodytype,brand,car,colour,enginetype,fueltype,generation,image,model,postcode,transmission to viewer;
GRANT { { SELECT | INSERT | UPDATE | DELETE | RULE | REFERENCES | TRIGGER }
    [,...] | ALL [ PRIVILEGES ] }
    ON [ TABLE ] tablename [, ...]
    TO { username | GROUP groupname | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { CREATE | TEMPORARY | TEMP } [,...] | ALL [ PRIVILEGES ] }
    ON DATABASE dbname [, ...]
    TO { username | GROUP groupname | PUBLIC } [, ...] [ WITH GRANT OPTION ]
#JOIN
SELECT * FROM weather INNER JOIN cities ON (weather.city = cities.name);
