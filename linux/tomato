#REMOTE LOGGING TO SYSLOGD SERVER

# with normal SYSLOGD or SYSKLOGD
http://www.debuntu.org/how-to-remote-syslog-logging-debian-and-ubuntu

$ vi /etc/default/syslogd
SYSLOGD="-r"

sudo /etc/init.d/sysklogd restart

# with RSYSLOG
# uncomment the following:
$ModLoad imudp
$UDPServerRun 514

# with SYSLOG-NG
# uncomment the following:
udp();

# ! REFER TO syslog-ng for outputing to postgresql !

# BANDWIDTH MONITOR PER IP WITH SNMP
http://jultech.wordpress.com/2007/01/22/wrt54gl-tomato-firmware-and-bandwidth-monitoring-via-snmp/
http://www.linksysinfo.org/forums/showthread.php?t=51064
http://forums.whirlpool.net.au/forum-replies-archive.cfm/963661.html
http://systembash.com/content/tag/cacti/

# on WRT59GL
nvram set snmpd_run=1
nvram commit
# REBOOT

# ssh into tomato and run below to test first:
/cifs1/snmpd -s -c /cifs1/snmpd.conf

# then on a remote computer run below:
snmpwalk -c public -v 2c 192.168.1.1
# if you get a list of stuff starting with HOST_RESOURCES... then it's working

# if above works
# place below in tomato: administration > scripts > firewall
# !! has to be ABSOLUTE PATH !!
sleep 30
/cifs1/snmpd -s -c /cifs1/snmpd.conf &


# IP to URL DNS LOOKUP
http://www.dslreports.com/forum/r23197832-Tomato-Enable-DNS-lookup-logging
# advanced > DHCP/DNS -> dnsmasq
log-queries

# IP activity tracking
# catch.sh
#!/bin/sh
if [ $# -ne 2 ];then
    echo 'need 2 arguments'
    exit 1
fi  
ssh root@192.168.1.1 -x 'cat /proc/net/ip_conntrack > /cifs1/ip_conntrack'
#64.233.181 is google
cat ./ip_conntrack | grep 'ESTABLISH' | grep -v '64.233.181' | sort | awk '{print $5,$6,$8,$11,$12}' > $1
if [ -f $2 ];then  
    lines=`comm -1 -2 $1 $2 | awk '{ print $1,$2,$3,$4 }'|sort|uniq|grep -v '192.168.1.122'`
    echo "$lines"
    for line in `echo "$lines"|sed -e 's/.*dst=\([0-9.]*\) .*/\1/g'`; do
        echo -n "$line \t"
        addr=`grep -o reply.*"$line" dnsmasq.log`
        if [ $? -eq 0 ];then
            echo "$addr"|tail -n 1
        else
            echo ''
        fi  
    done
fi  
cat $1 > $2 

# catch_loop.sh
while [ 1 ];do
    ./catch.sh current last;
    echo '--------------------------';
    if [ $1 ];then
        sleep $1
    else
        sleep 3;
    fi  
done
